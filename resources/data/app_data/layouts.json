{
	"text_bubble_layout":
	[
		{
			"type":"box",
			"location":[0, 0, 700, 500],
			"rgba":[0,0,128,64],
			"order": 10
		},
		{
			"type":"ttf",
			"location":[108, 302],
			"text":"-",
			"font":"main_text_font",
			"rgba":[255, 255, 255, 255],
			"id":"main_text",
			"order": 100,
			"visible": true
		},
		{
			"type":"box",
			"location":[100, 300, 500, 100],
			"rgba":[0,0,0,64],
			"order": 30
		},
		{
			"type":"box",
			"location":[100, 300, 4, 100],
			"rgba":[0,0,0,255],
			"order": 40
		},
		{
			"type":"box",
			"location":[596, 300, 4, 100],
			"rgba":[0,0,0,255],
			"order": 40
		},
		{
			"type":"box",
			"location":[100, 300, 500, 4],
			"rgba":[0,0,0,255],
			"order": 40
		},
		{
			"type":"box",
			"location":[100, 396, 500, 4],
			"rgba":[0,0,0,255],
			"order": 40
		},
		{
			"type":"box",
			"location":[560,380, 20, 4],
			"rgba":[255,255,255,255],
			"order": 200,
			"id":"wait_square",
			"visible": false
		},
		{
			"type":"polygon",
			"rgba":[255,255,255,255],
			"points":[ [560,388], [580,388], [570,398] ],
			"fill": "fill",
			"order": 200,
			"id":"wait_triangle",
			"visible": false
		}
	],
	"main_menu_layout": [
		{
			"type":"screen",
			"rgba":[0,0,0,255]
		},
		{
			"type":"external",
			"ref":"menu_main",
			"order":20
		},
		{
			"type":"external",
			"ref":"menu_options",
			"order":20
		},
		{
			"type":"external",
			"ref":"menu_controls",
			"order":20
		},
		{
			"type":"box",
			"location":[60,0, 20, 500],
			"rgba":[255,0,0,128],
			"order": 30,
			"id":"boxr",
			"visible": true
		},
		{
			"type":"box",
			"location":[60,0, 20, 500],
			"rgba":[0,255,0,128],
			"order": 30,
			"id":"boxg",
			"visible": true
		},
		{
			"type":"box",
			"location":[60,0, 20, 500],
			"rgba":[0,0,255,128],
			"order": 30,
			"id":"boxb",
			"visible": true
		},
		{
			"type":"ttf",
			"location":[0, 0],
			"text":"auto draw_txt_align_right=[](const std::string& /*k*/, size_t index, const std::vector<ldv::representation*>& v, const std::string& val, bool current){\n\tauto& r=*(static_cast<ldv::ttf_representation*>(v[0]));\n\t\tr.lock_changes();\n\t\t\tr.set_color(current ? ldv::rgb8(255,255,255) : ldv::rgb8(64,64,64));\n\t\t\tr.set_text_align(ldv::ttf_representation::text_align::right);\n\t\t\tr.set_text(val);\n\t\t\tr.unlock_changes();\n\t\tr.go_to({0, (int)index*20});\n};",
			"font":"code_font",
			"rgba":[0, 64, 0, 128],
			"id":"code_text",
			"order": 5,
			"visible": false
		}
	]
}
