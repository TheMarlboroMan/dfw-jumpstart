#Local specifics
__TEMPLATE_DIR_HOME__
MINGW32_INCLUDE=
MINGW32_LIB=
DIR_SDL2=
DIR_SDL2_LIB=
SYSTEM_FLAGS=

#Dependency specifics
DIR_LIBDANSDL2=$(DIR_HOME)libdansdl2
DIR_LIBDANSDL2_TOOLS=$(DIR_HOME)libdansdl2-tools
DIR_DFW=$(DIR_HOME)dfw
DIR_LOG=$(DIR_HOME)log
DIR_TOOLS=$(DIR_HOME)tools

#Build specifics.
DIR_OBJ=objects
EXECUTABLE=a.out

__TEMPLATE_DEBUG__
__TEMPLATE_OPTIMIZATION__
__TEMPLATE_WITH_DEBUG_CODE__
__TEMPLATE_DISABLE_ASSERT__
__TEMPLATE_CPPREV__

#Fixed compiler definitions.
CC=g++
WARNING_FLAGS=-Wall -Wextra -Wundef -Wcast-align -Wwrite-strings -Wlogical-op -Wmissing-declarations -Wredundant-decls -Wshadow -Woverloaded-virtual -fno-rtti
FLAGS_BASE=$(WARNING_FLAGS) $(DISABLE_ASSERT) $(WITH_DEBUG_CODE) -ansi -pedantic $(CPPREV)
CFLAGS=-c $(DEBUG) $(OPTIMIZATION) $(FLAGS_BASE) $(SYSTEM_FLAGS)
CFLAGS_EXECUTABLE=$(DEBUG) $(OPTIMIZATION) $(FLAGS_BASE)
LINKER=-L $(DIR_LIBDANSDL2) -L $(DIR_LIBDANSDL2_TOOLS) -L $(DIR_DFW) -L $(DIR_LOG) -L $(DIR_TOOLS) -llog -ltools -ldfw -lDanSDL2 -ldansdl2-tools -lSDL2 -lSDL2_ttf -lSDL2_mixer -lSDL2_image -lGL
INCLUDES=-I $(DIR_LIBDANSDL2) -I $(DIR_TOOLS) -I $(DIR_DFW) -I $(DIR_LOG) -I $(DIR_LIBDANSDL2_TOOLS)

#Commands.
CLEAN=if [ -d $(DIR_OBJ) ]; then rm -rf $(DIR_OBJ); fi;\
if [ -f $(EXECUTABLE) ]; then rm $(EXECUTABLE); fi;

CREATE_OBJ_DIR=mkdir -p $(DIR_OBJ);

include make/core
